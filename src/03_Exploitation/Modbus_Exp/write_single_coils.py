import os
import sys

sys.path.append('lib/smod/')
from System.Core.Global import *
from System.Core.Colors import *
from System.Core.Modbus import *

# Default values
outputAddr = '0x0000'
# FF00 - ON, 0000 - OFF
outputValue = 'FF00'

def printLine(str,color):
    if(str.find('[+]') != -1):
        print str.replace('[+]',color + '[+]' + bcolors.ENDC)
    elif(str.find('[-]') != -1):
        print str.replace('[-]',color + '[-]' + bcolors.ENDC)
    else:
        print str

def write_single_coils(ip, uid):
    ask_outputs()
    c = connectToTarget(ip,502)
    if(c == None):
        printLine('[-] Modbus is not running on : ' + ip,bcolors.WARNING)
        return None
    printLine('[+] Connecting to ' + ip,bcolors.OKGREEN)
    ans = c.sr1(ModbusADU(transId=getTransId(),unitId=int(uid))/ModbusPDU05_Write_Single_Coil(outputAddr=int(outputAddr,16),outputValue=int(outputValue,16)),timeout=timeout, verbose=1)
    ans = ModbusADU_Answer(str(ans))
    printLine('[+] Response is :',bcolors.OKGREEN)
    ans.show()

def ask_outputs():
    global outputAddr
    global outputValue
    outputA = raw_input("Enter the output address (default address is 0): ")
    outputV = raw_input("Enter the output value, FF00 (ON) or 0000 (OFF): ")
    if (outputA != ''):
        outputAddr = outputA
    if (outputV != ''):
        outputValue = outputV


